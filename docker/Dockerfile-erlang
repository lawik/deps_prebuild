ARG ELIXIR_VERSION
ARG OTP_VERSION
ARG ARCH
ARG GCC_VERSION
ARG LIBC
ARG MIX_ENV
ARG OS="alpine"

FROM elixir:${ELIXIR_VERSION}-erlang-${OTP_VERSION}-${OS} AS build

# install build dependencies
RUN apk add --no-cache build-base git curl

RUN git clone https://github.com/asdf-vm/asdf.git /.asdf --branch v0.14.0 && \
    source "/.asdf/asdf.sh"

# Nerves toolchains are nicely set up for cross compilation
RUN asdf plugin add nerves-toolchain https://github.com/nerves-project/asdf-plugin-nerves-toolchain.git && \
    asdf install nerves-toolchain ${GCC_VERSION}-${ARCH}-nerves-linux-${LIBC}

# install hex + rebar
RUN mix local.hex --force && \
    mix local.rebar --force

# set build ENV
ENV MIX_ENV=${MIX_ENV}

# install mix dependencies
RUN mix do deps.get, deps.compile

# build assets
COPY assets/package.json assets/package-lock.json ./assets/
RUN npm --prefix ./assets ci --progress=false --no-audit --loglevel=error

COPY priv priv
COPY assets assets
RUN npm run --prefix ./assets deploy
RUN mix phx.digest

# compile and build release
COPY lib lib
# uncomment COPY if rel/ exists
# COPY rel rel
RUN mix do compile, release

# prepare release image
FROM alpine:3.9 AS app
RUN apk add --no-cache openssl ncurses-libs

WORKDIR /app

RUN chown nobody:nobody /app

USER nobody:nobody

COPY --from=build --chown=nobody:nobody /app/_build/prod/rel/my_app ./

ENV HOME=/app

CMD ["bin/my_app", "start"]